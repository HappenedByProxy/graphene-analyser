testString = """
  Package [com.sony.songpal.mdr] (51ad79):
    appId=10124
    pkg=Package{b6e671d com.sony.songpal.mdr}
    timeStamp=2023-11-08 08:06:00
    lastUpdateTime=2023-11-08 08:06:16
    installerPackageName=com.aurora.store
    installerPackageUid=-1

    Package [com.android.adservices.api] (a37eabe):
    appId=10228
    pkg=Package{8f55b60 com.android.adservices.api}
    codePath=/apex/com.and
    timeStamp=2023-12-08 18:06:00
    lastUpdateTime=2023-12-09 15:15:16
    installerPackageName=com.fdroid
    installerPackageUid=-1

"""
# First, we get the package name.
# Using regex (my sworn enemy) to find and store everything between square bracketrs as a package. Then, get the other stuff like install date and where the package was installed from. With regex. Why?

packageName = r'Package \[([^\]]+)\] \((\w+)\):'
installTime = r'timeStamp=(\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2})'
lastUpdated = r'lastUpdateTime=(\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2})'
installerOrigin = r'installerPackageName([^\n]+)'

matches = re.findall(packageName + r'[\s\S]*?' + installTime + r'[\s\S]*?' +
                     lastUpdated + r'[\s\S]*?' + installerOrigin, testString)

packages = []

# ChatGPT 3.5 assisted in refactoring and fixing this code. "installTime" was outputting wrong information, the AI helped fix it.
for match in matches:
    packageName = match[0]
    installTime = match[1]
    lastUpdated = match[2]
    installerOrigin = match[3]
    
    packages.append({
        'packageName': packageName,
        'installTime': installTime,
        'lastUpdated': lastUpdated,
        'installerOrigin': installerOrigin
    })

for package in packages:
    print(f"Package Name: {package['packageName']}")
    print(f"Install time: {package['installTime']}")
    print(f"Last Update Time: {package['lastUpdated']}")
    print(f"Installer Package Name: {package['installerOrigin']}")
    print()